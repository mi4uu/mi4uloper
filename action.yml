#   @author: MI4UU
#   @created: 2025/01/29 13:05:20
# REF:
#   - https://docs.github.com/cn/actions/creating-actions/about-custom-actions
#   - https://docs.github.com/cn/actions/creating-actions/metadata-syntax-for-github-actions
#   - https://docs.github.com/en/actions/creating-actions/creating-a-composite-action

name: 'mi4uloper'
author: 'mi4uu'
description: 'ðŸš€ Sharpen Your Code, Ship with Confidence â€“ Elevate Your Workflow with ai review ðŸš€'

branding:
  icon: 'eye'
  color: 'purple'

inputs:
  chat-token:
    required: true
    description: 'Your ai API token.'
  max-length:
    default: "0"
    required: false
    description: 'The maximum length of the content for review, 0 means no limit.'
  model:
    required: false
    default: 'auto'
    description: 'The  model to choose for code review. if not set it will take first avilable'
  base-url:
    required: false
    default: 'https://api.deepseek.com'
    description: 'The base url of ai provider API.'
  sys-prompt:
    required: false
    default: 'You are a professional code review assistant responsible for analyzing code changes in GitHub Pull Requests. Identify potential issues such as code style violations, logical errors, security vulnerabilities, and provide improvement suggestions. Clearly list the problems and recommendations in a concise manner.'
    description: 'The system prompt for ai API.'
  user-prompt:
    required: false
    default: 'Please review the following code changes'
    description: 'The user prompt for ai API.'
  include-patterns:
    required: false
    description: 'The comma separated file patterns to include in the code review.'
  exclude-patterns:
    required: false
    default: 'pnpm-lock.yaml,package-lock.json,*.lock'
    description: 'The comma separated file patterns to exclude in the code review.'
  embedding_model:
    required: false
    default: "local"
    description: "set to local or specify to other model if you want to use API for embeddings"
  github-token:
    required: false
    default: '${{ github.token }}'
    description: 'The GITHUB_TOKEN secret or personal access token to authenticate. Defaults to `github.token`.'

runs:
  using: 'composite'
  steps:
    - name: Set up Bun
      uses: oven-sh/setup-bun@v1

    - name: Code Review
      shell: bash
      env:
        model: ${{ inputs.model }}
        embedding_model:  ${{ inputs.embedding_model }}
        baseUrl: ${{ inputs.base-url }}
        repo: ${{ github.repository }}
        OPENAI_API_KEY: ${{ inputs.chat-token }}
        ghToken: ${{ inputs.github-token }}
        GH_TOKEN: ${{ inputs.github-token }}
        sysPrompt: ${{ inputs.sys-prompt }}
        userPrompt: ${{ inputs.user-prompt }}
        pr: ${{ github.event.pull_request.number }}
        includePatterns: ${{ inputs.include-patterns }}
        excludePatterns: ${{ inputs.exclude-patterns }}
        maxLength: ${{ inputs.max-length }}
        GITHUB_LAST_COMMIT_REF: ${{ github.event.pull_request.head.sha }}"
        GITHUB_PR_REF: ${{ github.head_ref }}"

      run: |
        echo "PWD:"
        pwd
        echo "LS:"
        ls
        echo "github.action_path : ${{ github.action_path }}"
        echo "LS github.action_path : ${{ github.action_path }}"
        ls ${{ github.action_path }}
        echo "  github.event.pull_request.head.sha: ${{ github.event.pull_request.head.sha }}"
        echo " github.head_ref :  ${{ github.head_ref }} "
        # pr first commit?
        #echo " GITHUB_REF :    $GITHUB_REF"
        # last commit in pr
        #echo " GITHUB_SHA :   $GITHUB_SHA"
        
        echo "GIT STATUS:"
        git status
        echo "GIT log:"
        git log
        echo "BRANCH:"
        git rev-parse --abbrev-ref HEAD
        echo "GIT diff stat GITHUB_LAST_COMMIT_REF"
        echo "GIT diff stat GITHUB_PR_REF"
        #git diff --stat HEAD  ${{ github.head_ref }}
        pit pull
        echo "GIT log:"
        git log
        git diff --stat ${{ github.event.pull_request.head.sha }} HEAD
        
        echo "GIT diff stat GITHUB_PR_REF"
        git diff --stat  ${{ github.head_ref }} HEAD
        echo "GIT diff stat GITHUB_LAST_COMMIT_REF ... GITHUB_PR_REF"
        git diff --stat ${{ github.event.pull_request.head.sha }}  ${{ github.head_ref }}
        

        bun --bun run dist/index.js
